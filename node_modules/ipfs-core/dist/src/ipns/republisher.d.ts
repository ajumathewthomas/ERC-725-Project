export = IpnsRepublisher;
declare class IpnsRepublisher {
    constructor(publisher: any, datastore: any, peerId: any, keychain: any, options?: {});
    _publisher: any;
    _datastore: any;
    _peerId: any;
    _keychain: any;
    _options: {};
    _republishHandle: {
        /** @type {null|(() => Promise<void>)} */
        _task: (() => Promise<void>) | null;
        /** @type {null|Promise<void>} */
        _inflightTask: null | Promise<void>;
        /** @type {null|NodeJS.Timeout} */
        _timeoutId: null | NodeJS.Timeout;
        /**
         * @param {function(): number} period
         */
        runPeriodically: (period: () => number) => void;
        cancel: () => Promise<void>;
    } | null;
    start(): Promise<void>;
    stop(): Promise<void>;
    _republishEntries(privateKey: any, pass: any): Promise<void>;
    _republishEntry(privateKey: any): Promise<void>;
    _getPreviousValue(peerId: any): Promise<any>;
}
//# sourceMappingURL=republisher.d.ts.map
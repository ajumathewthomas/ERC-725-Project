declare function _exports({ ipld, preload }: {
    ipld: import('.').IPLD;
    preload: import('.').Preload;
}): (ipfsPath: string | import("cids"), options?: (LSOptions & import("../utils").AbortOptions) | undefined) => AsyncIterable<import("../utils").File | import("../utils").Directory>;
export = _exports;
export type LSEntry = import("../utils").File | import("../utils").Directory;
export type Options = LSOptions & import("../utils").AbortOptions;
export type LSOptions = {
    recursive?: boolean | undefined;
    preload?: boolean | undefined;
    includeContent?: boolean | undefined;
};
export type AbortOptions = {
    /**
     * - A timeout in ms
     */
    timeout?: number | undefined;
    /**
     * - Can be used to cancel any long running requests started as a result of this call
     */
    signal?: AbortSignal | undefined;
};
export type CID = import("cids");
//# sourceMappingURL=ls.d.ts.map
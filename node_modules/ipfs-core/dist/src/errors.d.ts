export var NotInitializedError: typeof NotInitializedError;
export var AlreadyInitializingError: typeof AlreadyInitializingError;
export var AlreadyInitializedError: typeof AlreadyInitializedError;
export var NotStartedError: typeof NotStartedError;
export var NotEnabledError: typeof NotEnabledError;
declare class NotInitializedError extends Error {
    constructor(message?: string);
    code: string;
}
declare namespace NotInitializedError {
    const code: string;
}
declare class AlreadyInitializingError extends Error {
    constructor(message?: string);
    code: string;
}
declare namespace AlreadyInitializingError {
    const code_1: string;
    export { code_1 as code };
}
declare class AlreadyInitializedError extends Error {
    constructor(message?: string);
    code: string;
}
declare namespace AlreadyInitializedError {
    const code_2: string;
    export { code_2 as code };
}
declare class NotStartedError extends Error {
    constructor(message?: string);
    code: string;
}
declare namespace NotStartedError {
    const code_3: string;
    export { code_3 as code };
}
declare class NotEnabledError extends Error {
    constructor(message?: string);
    code: string;
}
declare namespace NotEnabledError {
    const code_4: string;
    export { code_4 as code };
}
export {};
//# sourceMappingURL=errors.d.ts.map
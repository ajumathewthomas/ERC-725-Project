export const command: string;
export const describe: string;
export const builder: {
    recursive: {
        type: string;
        alias: string;
        default: boolean;
        describe: string;
    };
    'cid-base': {
        describe: string;
        type: string;
        choices: string[];
    };
    timeout: {
        type: string;
        coerce: typeof import("parse-duration").default;
    };
    metadata: {
        describe: string;
        type: string;
        alias: string;
        coerce: (val: any) => {} | undefined;
    };
    'metadata-json': {
        describe: string;
        type: string;
        coerce: (text: string, reviver?: ((this: any, key: string, value: any) => any) | undefined) => any;
    };
};
export function handler({ ctx, ipfsPath, recursive, cidBase, timeout, metadata, metadataJson }: {
    ctx: any;
    ipfsPath: any;
    recursive: any;
    cidBase: any;
    timeout: any;
    metadata: any;
    metadataJson: any;
}): Promise<void>;
export function handler({ ctx, ipfsPath, recursive, cidBase, timeout, metadata, metadataJson }: {
    ctx: any;
    ipfsPath: any;
    recursive: any;
    cidBase: any;
    timeout: any;
    metadata: any;
    metadataJson: any;
}): Promise<void>;
//# sourceMappingURL=add.d.ts.map